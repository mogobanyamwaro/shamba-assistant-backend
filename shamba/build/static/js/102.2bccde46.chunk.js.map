{"version":3,"sources":["example-components/WidgetsImageCrop/ImageCrop1/index.js","example-pages/WidgetsImageCrop/index.js","assets/images/stock-photos/stock-3.jpg"],"names":["src","stock3","LivePreviewExample","props","state","cropResult","cropImage","bind","onChange","useDefaultImage","e","files","preventDefault","dataTransfer","target","reader","FileReader","onload","setState","result","readAsDataURL","this","cropper","getCroppedCanvas","toDataURL","className","accept","id","multiple","type","htmlFor","Button","size","component","onClick","style","height","width","preview","guides","ref","Grid","container","spacing","item","md","Alert","severity","alt","Component","WidgetsImageCrop","titleHeading","titleDescription","module","exports"],"mappings":"yWASMA,E,OAAMC,EAESC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXJ,MACAK,WAAY,MAEd,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBARN,E,4CAWnB,SAASG,GAAI,IAEPC,EAFM,OACVD,EAAEE,iBAEEF,EAAEG,aACJF,EAAQD,EAAEG,aAAaF,MACdD,EAAEI,SACXH,EAAQD,EAAEI,OAAOH,OAEnB,IAAMI,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,EAAKC,SAAS,CAAElB,IAAKe,EAAOI,UAE9BJ,EAAOK,cAAcT,EAAM,M,uBAG7B,WACiD,qBAApCU,KAAKC,QAAQC,oBAGxBF,KAAKH,SAAS,CACZb,WAAYgB,KAAKC,QAAQC,mBAAmBC,gB,6BAIhD,WACEH,KAAKH,SAAS,CAAElB,U,oBAGlB,WAAU,IAAD,OACP,OACE,oCACE,yBAAKyB,UAAU,gEACb,yBAAKA,UAAU,QACb,2BACEC,OAAO,UACPlB,SAAUa,KAAKb,SACfiB,UAAU,SACVE,GAAG,4BACHC,UAAQ,EACRC,KAAK,SAEP,2BACEJ,UAAU,sBACVK,QAAQ,6BACR,kBAACC,EAAA,EAAD,CACEN,UAAU,+BACVO,KAAK,QACLC,UAAU,QAHZ,WAQF,yBAAKR,UAAU,uBAEf,kBAACM,EAAA,EAAD,CACEC,KAAK,QACLP,UAAU,0BACVS,QAASb,KAAKZ,iBAHhB,qBAMA,kBAACsB,EAAA,EAAD,CACEC,KAAK,QACLP,UAAU,yBACVS,QAASb,KAAKf,WAHhB,eAOF,kBAAC,IAAD,CACE6B,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAC7BC,QAAQ,eACRC,QAAQ,EACRvC,IAAKqB,KAAKjB,MAAMJ,IAChBwC,IAAK,SAAClB,GACJ,EAAKA,QAAUA,MAIrB,yBAAKG,UAAU,iBACf,kBAACgB,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTlB,UAAU,6CACV,kBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,yBAAKpB,UAAU,kDAAf,oBAGEJ,KAAKjB,MAAMC,YACX,kBAACyC,EAAA,EAAD,CACErB,UAAU,qDACVsB,SAAS,WAFX,0BAMD1B,KAAKjB,MAAMC,YACV,yBACEoB,UAAU,4FACVU,MAAO,CAAEC,OAAQ,MACjB,yBACEX,UAAU,+BACVzB,IAAKqB,KAAKjB,MAAMC,WAChB2C,IAAI,UAKZ,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,yBAAKpB,UAAU,kDAAf,WAGA,yBACEA,UAAU,gFACVU,MAAO,CAAEC,OAAQ,MACjB,yBAAKX,UAAU,qD,GA5HmBwB,aCJjC,SAASC,IACtB,OACE,oCACE,kBAAC,IAAD,CACEC,aAAa,aACbC,iBAAiB,mEAGnB,kBAAC,IAAD,KACE,kBAAC,EAAD,U,oBChBRC,EAAOC,QAAU,IAA0B","file":"static/js/102.2bccde46.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Grid, Button } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Cropper from 'react-cropper';\n\nimport stock3 from '../../../assets/images/stock-photos/stock-3.jpg';\n\nconst src = stock3;\n\nexport default class LivePreviewExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      src,\n      cropResult: null\n    };\n    this.cropImage = this.cropImage.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.useDefaultImage = this.useDefaultImage.bind(this);\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    let files;\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.setState({ src: reader.result });\n    };\n    reader.readAsDataURL(files[0]);\n  }\n\n  cropImage() {\n    if (typeof this.cropper.getCroppedCanvas() === 'undefined') {\n      return;\n    }\n    this.setState({\n      cropResult: this.cropper.getCroppedCanvas().toDataURL()\n    });\n  }\n\n  useDefaultImage() {\n    this.setState({ src });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"d-flex align-items-center flex-column justify-content-center\">\n          <div className=\"pb-4\">\n            <input\n              accept=\"image/*\"\n              onChange={this.onChange}\n              className=\"d-none\"\n              id=\"upload-image-for-cropping\"\n              multiple\n              type=\"file\"\n            />\n            <label\n              className=\"d-block text-center\"\n              htmlFor=\"upload-image-for-cropping\">\n              <Button\n                className=\"btn-primary font-weight-bold\"\n                size=\"large\"\n                component=\"span\">\n                Upload\n              </Button>\n            </label>\n\n            <div className=\"divider w-100 my-4\" />\n\n            <Button\n              size=\"large\"\n              className=\"btn-outline-primary m-2\"\n              onClick={this.useDefaultImage}>\n              Use Default Image\n            </Button>\n            <Button\n              size=\"large\"\n              className=\"btn-outline-danger m-2\"\n              onClick={this.cropImage}>\n              Crop Image\n            </Button>\n          </div>\n          <Cropper\n            style={{ height: 400, width: '100%' }}\n            preview=\".img-preview\"\n            guides={false}\n            src={this.state.src}\n            ref={(cropper) => {\n              this.cropper = cropper;\n            }}\n          />\n        </div>\n        <div className=\"divider my-4\" />\n        <Grid\n          container\n          spacing={6}\n          className=\"align-items-center justify-content-center\">\n          <Grid item md={6}>\n            <div className=\"font-weight-bold text-center font-size-xl mb-4\">\n              Cropping Result\n            </div>\n            {!this.state.cropResult && (\n              <Alert\n                className=\"alerts-alternate font-size-lg text-warning p-4 m-4\"\n                severity=\"warning\">\n                Click the crop button!\n              </Alert>\n            )}\n            {this.state.cropResult && (\n              <div\n                className=\"shadow-xxl m-4 rounded-lg overflow-hidden w-100 img-preview d-flex justify-content-center\"\n                style={{ height: 340 }}>\n                <img\n                  className=\"rounded-lg img-fit-container\"\n                  src={this.state.cropResult}\n                  alt=\"...\"\n                />\n              </div>\n            )}\n          </Grid>\n          <Grid item md={6}>\n            <div className=\"font-weight-bold text-center font-size-xl mb-4\">\n              Preview\n            </div>\n            <div\n              className=\"shadow-xxl m-4 rounded-lg overflow-hidden w-100 d-flex justify-content-center\"\n              style={{ height: 340 }}>\n              <div className=\"rounded-lg img-fit-container img-preview\" />\n            </div>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { PageTitle } from '../../layout-components';\n\nimport { ExampleWrapperSimple } from '../../layout-components';\n\nimport WidgetsImageCrop1 from '../../example-components/WidgetsImageCrop/ImageCrop1';\nexport default function WidgetsImageCrop() {\n  return (\n    <>\n      <PageTitle\n        titleHeading=\"Image Crop\"\n        titleDescription=\"You can easily crop and edit images with this React component.\"\n      />\n\n      <ExampleWrapperSimple>\n        <WidgetsImageCrop1 />\n      </ExampleWrapperSimple>\n    </>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/stock-3.7be5ada3.jpg\";"],"sourceRoot":""}