{"version":3,"sources":["example-components/ChartsSparklines/ChartsSparklines1/index.js","example-components/ChartsSparklines/ChartsSparklines2/index.js","example-components/ChartsSparklines/ChartsSparklines3/index.js","example-components/ChartsSparklines/ChartsSparklines4/index.js","example-components/ChartsSparklines/ChartsSparklines5/index.js","example-components/ChartsSparklines/ChartsSparklines6/index.js","example-pages/ChartsSparklines/index.js"],"names":["boxMullerRandom","x1","x2","w","phase","Math","random","sqrt","log","randomData","n","Array","apply","map","sampleData1","sampleData2","sampleData3","LivePreviewExample","Card","className","Grid","container","spacing","item","md","data","height","style","stroke","fill","strokeOpacity","strokeDasharray","color","margin","strokeWidth","size","props","state","setInterval","setState","concat","this","limit","fillOpacity","Component","type","ChartsSparklines","titleHeading","titleDescription","Alert","icon","severity"],"mappings":"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","file":"static/js/109.fef32558.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Grid, Card } from '@material-ui/core';\n\nimport {\n  Sparklines,\n  SparklinesLine,\n  SparklinesReferenceLine\n} from 'react-sparklines';\n\nfunction boxMullerRandom() {\n  let phase = false,\n    x1,\n    x2,\n    w;\n\n  return (function () {\n    if ((phase = !phase)) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nfunction randomData(n = 30) {\n  return Array.apply(0, Array(n)).map(boxMullerRandom);\n}\n\nconst sampleData1 = randomData(30);\nconst sampleData2 = randomData(32);\nconst sampleData3 = randomData(28);\n\nexport default function LivePreviewExample() {\n  return (\n    <>\n      <Card className=\"p-4 mb-spacing-6-x2 bg-second\">\n        <Grid container spacing={6}>\n          <Grid item md={4}>\n            <Sparklines data={sampleData1} height={50}>\n              <SparklinesLine style={{ stroke: 'white', fill: 'none' }} />\n              <SparklinesReferenceLine\n                style={{\n                  stroke: 'white',\n                  strokeOpacity: 0.75,\n                  strokeDasharray: '2, 2'\n                }}\n              />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData2} height={50}>\n              <SparklinesLine style={{ stroke: 'white', fill: 'none' }} />\n              <SparklinesReferenceLine\n                style={{\n                  stroke: 'white',\n                  strokeOpacity: 0.75,\n                  strokeDasharray: '2, 2'\n                }}\n              />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData3} height={50}>\n              <SparklinesLine style={{ stroke: 'white', fill: 'none' }} />\n              <SparklinesReferenceLine\n                style={{\n                  stroke: 'white',\n                  strokeOpacity: 0.75,\n                  strokeDasharray: '2, 2'\n                }}\n              />\n            </Sparklines>\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\n\nfunction boxMullerRandom() {\n  let phase = false,\n    x1,\n    x2,\n    w;\n\n  return (function () {\n    if ((phase = !phase)) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nfunction randomData(n = 30) {\n  return Array.apply(0, Array(n)).map(boxMullerRandom);\n}\n\nconst sampleData1 = randomData(30);\nconst sampleData2 = randomData(32);\nconst sampleData3 = randomData(28);\n\nexport default function LivePreviewExample() {\n  return (\n    <>\n      <div className=\"p-4 mb-spacing-6-x2\">\n        <Grid container spacing={6}>\n          <Grid item md={4}>\n            <Sparklines data={sampleData1}>\n              <SparklinesLine style={{ fill: 'none' }} />\n              <SparklinesSpots />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData2}>\n              <SparklinesLine color=\"#56b45d\" />\n              <SparklinesSpots style={{ fill: '#56b45d' }} />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData3} margin={6}>\n              <SparklinesLine\n                style={{ strokeWidth: 3, stroke: '#336aff', fill: 'none' }}\n              />\n              <SparklinesSpots\n                size={4}\n                style={{ stroke: '#336aff', strokeWidth: 3, fill: 'white' }}\n              />\n            </Sparklines>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Sparklines,\n  SparklinesBars,\n  SparklinesLine,\n  SparklinesSpots\n} from 'react-sparklines';\n\nfunction boxMullerRandom() {\n  let phase = false,\n    x1,\n    x2,\n    w;\n\n  return (function () {\n    if ((phase = !phase)) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nexport default class LivePreviewExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    setInterval(\n      () =>\n        this.setState({\n          data: this.state.data.concat([boxMullerRandom()])\n        }),\n      100\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"p-4 mb-spacing-6-x2\">\n          <Grid container spacing={6}>\n            <Grid item md={4}>\n              <Sparklines data={this.state.data} limit={20}>\n                <SparklinesLine color=\"#1c8cdc\" />\n                <SparklinesSpots />\n              </Sparklines>\n            </Grid>\n            <Grid item md={4}>\n              <Sparklines data={this.state.data} limit={20}>\n                <SparklinesBars\n                  style={{ fill: '#41c3f9', fillOpacity: '.25' }}\n                />\n                <SparklinesLine style={{ stroke: '#41c3f9', fill: 'none' }} />\n              </Sparklines>\n            </Grid>\n            <Grid item md={4}>\n              <Sparklines data={this.state.data} limit={20}>\n                <SparklinesLine\n                  style={{ stroke: 'none', fill: '#8e44af', fillOpacity: '1' }}\n                />\n              </Sparklines>\n            </Grid>\n          </Grid>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Sparklines,\n  SparklinesLine,\n  SparklinesReferenceLine\n} from 'react-sparklines';\n\nfunction boxMullerRandom() {\n  let phase = false,\n    x1,\n    x2,\n    w;\n\n  return (function () {\n    if ((phase = !phase)) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nfunction randomData(n = 30) {\n  return Array.apply(0, Array(n)).map(boxMullerRandom);\n}\n\nconst sampleData1 = randomData(30);\nconst sampleData2 = randomData(32);\nconst sampleData3 = randomData(28);\n\nexport default function LivePreviewExample() {\n  return (\n    <>\n      <div className=\"p-4 mb-spacing-6-x2\">\n        <Grid container spacing={6}>\n          <Grid item md={4}>\n            <Sparklines data={sampleData1}>\n              <SparklinesLine />\n              <SparklinesReferenceLine type=\"min\" />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData2}>\n              <SparklinesLine />\n              <SparklinesReferenceLine type=\"mean\" />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData3}>\n              <SparklinesLine />\n              <SparklinesReferenceLine type=\"median\" />\n            </Sparklines>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Sparklines,\n  SparklinesBars,\n  SparklinesNormalBand,\n  SparklinesLine,\n  SparklinesReferenceLine\n} from 'react-sparklines';\n\nfunction boxMullerRandom() {\n  let phase = false,\n    x1,\n    x2,\n    w;\n\n  return (function () {\n    if ((phase = !phase)) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nfunction randomData(n = 30) {\n  return Array.apply(0, Array(n)).map(boxMullerRandom);\n}\n\nconst sampleData1 = randomData(30);\nconst sampleData2 = randomData(32);\nconst sampleData3 = randomData(28);\n\nexport default function LivePreviewExample() {\n  return (\n    <>\n      <div className=\"p-4 mb-spacing-6-x2\">\n        <Grid container spacing={6}>\n          <Grid item md={4}>\n            <Sparklines data={sampleData1}>\n              <SparklinesLine style={{ fill: 'none' }} />\n              <SparklinesNormalBand />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData2}>\n              <SparklinesLine style={{ fill: 'none' }} />\n              <SparklinesNormalBand />\n              <SparklinesReferenceLine type=\"mean\" />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData3}>\n              <SparklinesBars\n                style={{ fill: 'slategray', fillOpacity: '.5' }}\n              />\n              <SparklinesReferenceLine />\n            </Sparklines>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\n\nfunction boxMullerRandom() {\n  let phase = false,\n    x1,\n    x2,\n    w;\n\n  return (function () {\n    if ((phase = !phase)) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nfunction randomData(n = 30) {\n  return Array.apply(0, Array(n)).map(boxMullerRandom);\n}\n\nconst sampleData1 = randomData(30);\nconst sampleData2 = randomData(32);\nconst sampleData3 = randomData(28);\n\nexport default function LivePreviewExample() {\n  return (\n    <>\n      <div className=\"p-4\">\n        <Grid container spacing={6}>\n          <Grid item md={4}>\n            <Sparklines data={sampleData1} height={40}>\n              <SparklinesLine\n                style={{ stroke: '#559500', fill: '#8fc638', fillOpacity: '1' }}\n              />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData2} height={80}>\n              <SparklinesLine\n                style={{ stroke: '#d1192e', strokeWidth: '1', fill: 'none' }}\n              />\n            </Sparklines>\n          </Grid>\n          <Grid item md={4}>\n            <Sparklines data={sampleData3}>\n              <SparklinesLine\n                style={{ strokeWidth: 3, stroke: '#336aff', fill: 'none' }}\n              />\n            </Sparklines>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { PageTitle } from '../../layout-components';\n\nimport { ExampleWrapperSeamless } from '../../layout-components';\nimport { ExampleWrapperSimple } from '../../layout-components';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport ChartsSparklines1 from '../../example-components/ChartsSparklines/ChartsSparklines1';\nimport ChartsSparklines2 from '../../example-components/ChartsSparklines/ChartsSparklines2';\nimport ChartsSparklines3 from '../../example-components/ChartsSparklines/ChartsSparklines3';\nimport ChartsSparklines4 from '../../example-components/ChartsSparklines/ChartsSparklines4';\nimport ChartsSparklines5 from '../../example-components/ChartsSparklines/ChartsSparklines5';\nimport ChartsSparklines6 from '../../example-components/ChartsSparklines/ChartsSparklines6';\nexport default function ChartsSparklines() {\n  return (\n    <>\n      <PageTitle\n        titleHeading=\"Sparklines Charts\"\n        titleDescription=\"These components add tiny charts in various elements and components.\"\n      />\n\n      <Alert icon={false} className=\"alerts-alternate mb-5\" severity=\"warning\">\n        <div className=\"d-flex align-items-center align-content-start\">\n          <span className=\"font-size-lg d-block d-40 btn-icon mr-3 text-center bg-danger text-white rounded-sm\">\n            <FontAwesomeIcon icon={['fas', 'exclamation']} />\n          </span>\n          <span>\n            Check out the the <b>Data Blocks</b> and <b>Marketing</b> sections\n            to see more examples with these components in action, integrated\n            together with others.\n          </span>\n        </div>\n      </Alert>\n\n      <ExampleWrapperSeamless>\n        <ChartsSparklines1 />\n      </ExampleWrapperSeamless>\n      <ExampleWrapperSimple>\n        <ChartsSparklines2 />\n      </ExampleWrapperSimple>\n      <ExampleWrapperSimple>\n        <ChartsSparklines3 />\n      </ExampleWrapperSimple>\n      <ExampleWrapperSimple>\n        <ChartsSparklines4 />\n      </ExampleWrapperSimple>\n      <ExampleWrapperSimple>\n        <ChartsSparklines5 />\n      </ExampleWrapperSimple>\n      <ExampleWrapperSimple>\n        <ChartsSparklines6 />\n      </ExampleWrapperSimple>\n    </>\n  );\n}\n"],"sourceRoot":""}