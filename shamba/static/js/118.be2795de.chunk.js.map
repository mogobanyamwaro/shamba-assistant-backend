{"version":3,"sources":["example-components/FormsValidation/FormsValidation1/index.js","example-components/FormsValidation/FormsValidation2/index.js","example-pages/FormsValidation/index.js"],"names":["LivePreviewExample","noValidate","autoComplete","Container","className","TextField","fullWidth","error","id","label","defaultValue","helperText","variant","validationSchema","Yup","name","required","email","password","min","confirmPassword","oneOf","Form","props","values","errors","touched","handleSubmit","handleChange","isValid","console","table","onSubmit","Boolean","value","onChange","InputProps","startAdornment","InputAdornment","position","type","Button","size","disabled","submit","data","log","state","render","initialValues","this","Component","FormsValidation","titleHeading","titleDescription","FormsValidation2"],"mappings":"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","file":"static/js/118.be2795de.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Container, TextField } from '@material-ui/core';\n\nexport default function LivePreviewExample() {\n  return (\n    <>\n      <form noValidate autoComplete=\"off\">\n        <Container className=\"py-4\">\n          <TextField\n            fullWidth\n            error\n            id=\"standard-error\"\n            label=\"Error\"\n            defaultValue=\"Hello World\"\n          />\n        </Container>\n        <Container className=\"py-4\">\n          <TextField\n            fullWidth\n            error\n            id=\"standard-error-helper-text\"\n            label=\"Error\"\n            defaultValue=\"Hello World\"\n            helperText=\"Incorrect entry.\"\n          />\n        </Container>\n        <Container className=\"py-4\">\n          <TextField\n            fullWidth\n            error\n            id=\"filled-error\"\n            label=\"Error\"\n            defaultValue=\"Hello World\"\n            variant=\"filled\"\n          />\n        </Container>\n        <Container className=\"py-4\">\n          <TextField\n            fullWidth\n            error\n            id=\"filled-error-helper-text\"\n            label=\"Error\"\n            defaultValue=\"Hello World\"\n            helperText=\"Incorrect entry.\"\n            variant=\"filled\"\n          />\n        </Container>\n        <Container className=\"py-4\">\n          <TextField\n            fullWidth\n            error\n            id=\"outlined-error\"\n            label=\"Error\"\n            defaultValue=\"Hello World\"\n            variant=\"outlined\"\n          />\n        </Container>\n        <Container className=\"py-4\">\n          <TextField\n            fullWidth\n            error\n            id=\"outlined-error-helper-text\"\n            label=\"Error\"\n            defaultValue=\"Hello World\"\n            helperText=\"Incorrect entry.\"\n            variant=\"outlined\"\n          />\n        </Container>\n      </form>\n    </>\n  );\n}\n","import React, { Component } from 'react';\n\nimport {\n  Container,\n  InputAdornment,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport NameIcon from '@material-ui/icons/SupervisorAccount';\nimport LockIcon from '@material-ui/icons/Lock';\nimport EmailIcon from '@material-ui/icons/Email';\n\nconst validationSchema = Yup.object({\n  name: Yup.string('Enter a name').required('Name is required'),\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('')\n    .min(8, 'Password must contain atleast 8 characters')\n    .required('Enter your password'),\n  confirmPassword: Yup.string('Enter your password')\n    .required('Confirm your password')\n    .oneOf([Yup.ref('password')], 'Password does not match')\n});\n\nconst Form = (props) => {\n  const {\n    values: { name, email, password, confirmPassword },\n    errors,\n    touched,\n    handleSubmit,\n    handleChange,\n    isValid\n  } = props;\n  console.table(props);\n\n  return (\n    <Container className=\"py-4\">\n      <form onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          className=\"mb-4\"\n          name=\"name\"\n          helperText={touched.name ? errors.name : ''}\n          error={Boolean(errors.name)}\n          label=\"Name\"\n          value={name}\n          onChange={handleChange}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <NameIcon />\n              </InputAdornment>\n            )\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          className=\"mb-4\"\n          name=\"email\"\n          helperText={touched.email ? errors.email : ''}\n          error={Boolean(errors.email)}\n          label=\"Email\"\n          fullWidth\n          value={email}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon />\n              </InputAdornment>\n            )\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          className=\"mb-4\"\n          name=\"password\"\n          helperText={touched.password ? errors.password : ''}\n          error={Boolean(errors.password)}\n          label=\"Password\"\n          fullWidth\n          type=\"password\"\n          value={password}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon />\n              </InputAdornment>\n            )\n          }}\n        />\n        <TextField\n          variant=\"outlined\"\n          className=\"mb-4\"\n          name=\"confirmPassword\"\n          helperText={touched.confirmPassword ? errors.confirmPassword : ''}\n          error={Boolean(errors.confirmPassword)}\n          label=\"Confirm Password\"\n          fullWidth\n          type=\"password\"\n          value={confirmPassword}\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon />\n              </InputAdornment>\n            )\n          }}\n        />\n        <div className=\"text-center\">\n          <Button\n            type=\"submit\"\n            size=\"large\"\n            className=\"btn-success\"\n            disabled={!isValid}>\n            Validate Form\n          </Button>\n        </div>\n      </form>\n    </Container>\n  );\n};\n\nclass LivePreviewExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  submit = (data) => {\n    console.log(data);\n  };\n\n  render() {\n    const values = { name: '', email: '', confirmPassword: '', password: '' };\n    return (\n      <>\n        <Formik\n          render={(props) => <Form {...props} />}\n          initialValues={values}\n          validationSchema={validationSchema}\n          onSubmit={this.submit}\n        />\n      </>\n    );\n  }\n}\n\nexport default LivePreviewExample;\n","import React from 'react';\n\nimport { PageTitle } from '../../layout-components';\n\nimport { ExampleWrapperSimple } from '../../layout-components';\n\nimport FormsValidation1 from '../../example-components/FormsValidation/FormsValidation1';\nimport FormsValidation2 from '../../example-components/FormsValidation/FormsValidation2';\nexport default function FormsValidation() {\n  return (\n    <>\n      <PageTitle\n        titleHeading=\"Validation\"\n        titleDescription=\"Inline validation is very easy to implement using our UI framework.\"\n      />\n\n      <ExampleWrapperSimple>\n        <FormsValidation1 />\n      </ExampleWrapperSimple>\n      <ExampleWrapperSimple>\n        <FormsValidation2 />\n      </ExampleWrapperSimple>\n    </>\n  );\n}\n"],"sourceRoot":""}